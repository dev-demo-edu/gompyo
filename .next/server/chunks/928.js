"use strict";exports.id=928,exports.ids=[928],exports.modules={13611:(e,t,a)=>{a.d(t,{T:()=>m});var n=a(75159),r=a(95372),i=a(17235),s=a(66081);class m{constructor(){this.costDetailService=new s.G}async create(e){let[t]=await n.db.insert(r.costs).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.costs).where((0,i.eq)(r.costs.id,e));return t}async findAll(){return await n.db.select().from(r.costs)}async findByCargoId(e){let[t]=await n.db.select().from(r.costs).where((0,i.eq)(r.costs.cargoId,e));return t}async update(e,t){let[a]=await n.db.update(r.costs).set(t).where((0,i.eq)(r.costs.id,e)).returning();return a}async delete(e){await this.costDetailService.deleteByCostId(e);let[t]=await n.db.delete(r.costs).where((0,i.eq)(r.costs.id,e)).returning();return t}}},20946:(e,t,a)=>{a.d(t,{y:()=>s});var n=a(75159),r=a(95372),i=a(17235);class s{async create(e){let[t]=await n.db.insert(r.contracts).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.contracts).where((0,i.eq)(r.contracts.id,e));return t}async findAll(){return await n.db.select().from(r.contracts)}async update(e,t){let[a]=await n.db.update(r.contracts).set(t).where((0,i.eq)(r.contracts.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.contracts).where((0,i.eq)(r.contracts.id,e)).returning();return t}}},37710:(e,t,a)=>{a.d(t,{o:()=>m});var n=a(75159),r=a(95372),i=a(17235),s=a(70014);class m{constructor(){this.cargoService=new s.q}async create(e){let[t]=await n.db.insert(r.shipments).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.shipments).where((0,i.eq)(r.shipments.id,e));return t}async findAll(){return await n.db.select().from(r.shipments)}async findByContractId(e){return await n.db.select().from(r.shipments).where((0,i.eq)(r.shipments.contractId,e))}async update(e,t){let[a]=await n.db.update(r.shipments).set(t).where((0,i.eq)(r.shipments.id,e)).returning();return a}async delete(e){let t=await this.cargoService.findByShipmentId(e);await Promise.all(t.map(e=>this.cargoService.delete(e.id)));let[a]=await n.db.delete(r.shipments).where((0,i.eq)(r.shipments.id,e)).returning();return a}}},64840:(e,t,a)=>{a.d(t,{W:()=>s});var n=a(75159),r=a(95372),i=a(17235);class s{async createWithDetails(e){try{let[t]=await n.db.insert(r.payments).values(e.payment).returning();switch(e.payment.paymentMethod){case"T/T":if(!e.paymentTt)throw Error("T/T 결제 방식에는 paymentTt 데이터가 필요합니다.");await this.createTt({...e.paymentTt,paymentId:t.id});break;case"Usance":if(!e.paymentUsance)throw Error("Usance 결제 방식에는 paymentUsance 데이터가 필요합니다.");await this.createUsance({...e.paymentUsance,paymentId:t.id});break;case"CAD":case"L/C":break;default:throw Error(`지원하지 않는 결제 방식입니다: ${e.payment.paymentMethod}`)}return t}catch(e){throw console.error("결제 정보 생성 중 오류 발생:",e),e}}async create(e){let[t]=await n.db.insert(r.payments).values(e).returning();return t}async createTt(e){let[t]=await n.db.insert(r.paymentsTt).values(e).returning();return t}async createUsance(e){let[t]=await n.db.insert(r.paymentsUsance).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.id,e));return t}async findTtByPaymentId(e){let[t]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e));return t}async findUsanceByPaymentId(e){let[t]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e));return t}async findAll(){let e=await n.db.select().from(r.payments);return await Promise.all(e.map(async e=>{let[t]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e.id)),[a]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e.id)),s=t?(t.advancePaymentAmount||0)+(t.remainingPaymentAmount||0):0;return{...e,paymentDueDate:e.paymentDueDate,advancePaymentDate:t?.advancePaymentDate??null,advancePaymentRatio:t?.advancePaymentRatio??null,advancePaymentAmount:t?.advancePaymentAmount??null,remainingPaymentDate:t?.remainingPaymentDate??null,remainingPaymentRatio:t?.remainingPaymentRatio??null,remainingPaymentAmount:t?.remainingPaymentAmount??null,counterpartBank:t?.counterpartBank??null,paymentTerm:a?.paymentTerm??null,contractExchangeRate:a?.contractExchangeRate??null,totalContractAmount:s}}))}async findByContractId(e){let[t]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.contractId,e));if(!t)return null;let[a]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,t.id)),[s]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,t.id)),m=a?(a.advancePaymentAmount||0)+(a.remainingPaymentAmount||0):0;return{...t,paymentDueDate:t.paymentDueDate,advancePaymentDate:a?.advancePaymentDate??null,advancePaymentRatio:a?.advancePaymentRatio??null,advancePaymentAmount:a?.advancePaymentAmount??null,remainingPaymentDate:a?.remainingPaymentDate??null,remainingPaymentRatio:a?.remainingPaymentRatio??null,remainingPaymentAmount:a?.remainingPaymentAmount??null,counterpartBank:a?.counterpartBank??null,paymentTerm:s?.paymentTerm??null,contractExchangeRate:s?.contractExchangeRate??null,totalContractAmount:m}}async update(e,t){try{let[a]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.id,e));if(!a)throw Error("결제 정보를 찾을 수 없습니다.");if(a.paymentMethod!==t.paymentMethod){switch(a.paymentMethod){case"T/T":await this.deleteTt(e);break;case"Usance":await this.deleteUsance(e)}switch(t.paymentMethod){case"T/T":if(!t.advancePaymentDate||!t.remainingPaymentDate)throw Error("T/T 결제 방식에는 선급금과 잔금 날짜가 필요합니다.");await this.createTt({paymentId:e,advancePaymentDate:t.advancePaymentDate,advancePaymentRatio:t.advancePaymentRatio||30,advancePaymentAmount:(t.totalContractAmount||0)*(t.advancePaymentRatio||30)/100,remainingPaymentDate:t.remainingPaymentDate,remainingPaymentRatio:t.remainingPaymentRatio||70,remainingPaymentAmount:(t.totalContractAmount||0)*(t.remainingPaymentRatio||70)/100,counterpartBank:t.counterpartBank||""});break;case"Usance":if(!t.paymentTerm)throw Error("Usance 결제 방식에는 결제 기간이 필요합니다.");await this.createUsance({paymentId:e,paymentTerm:t.paymentTerm})}}else switch(t.paymentMethod){case"T/T":if(!t.advancePaymentDate||!t.remainingPaymentDate)throw Error("T/T 결제 방식에는 선급금과 잔금 날짜가 필요합니다.");await this.updateTt(e,{advancePaymentDate:t.advancePaymentDate,advancePaymentRatio:t.advancePaymentRatio,remainingPaymentDate:t.remainingPaymentDate,remainingPaymentRatio:t.remainingPaymentRatio,counterpartBank:t.counterpartBank||"",advancePaymentAmount:(t.totalContractAmount||0)*(t.advancePaymentRatio||30)/100,remainingPaymentAmount:(t.totalContractAmount||0)*(t.remainingPaymentRatio||70)/100});break;case"Usance":if(!t.paymentTerm)throw Error("Usance 결제 방식에는 결제 기간이 필요합니다.");await this.updateUsance(e,{paymentTerm:t.paymentTerm})}let[s]=await n.db.update(r.payments).set({paymentMethod:t.paymentMethod,paymentDueDate:t.paymentDueDate}).where((0,i.eq)(r.payments.id,e)).returning();return s}catch(e){throw console.error("결제 정보 업데이트 중 오류 발생:",e),e}}async updateTt(e,t){if(void 0!==t.advancePaymentRatio&&null!==t.advancePaymentRatio){let e=(t.advancePaymentAmount||0)+(t.remainingPaymentAmount||0),a=this.calculatePaymentRatios({totalContractAmount:e,advancePaymentRatio:t.advancePaymentRatio});t={...t,advancePaymentAmount:a.advancePaymentAmount,remainingPaymentAmount:a.remainingPaymentAmount}}let[a]=await n.db.update(r.paymentsTt).set(t).where((0,i.eq)(r.paymentsTt.paymentId,e)).returning();return a}async updateUsance(e,t){let[a]=await n.db.update(r.paymentsUsance).set(t).where((0,i.eq)(r.paymentsUsance.paymentId,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.payments).where((0,i.eq)(r.payments.id,e)).returning();return t}async deleteTt(e){let[t]=await n.db.delete(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e)).returning();return t}async deleteUsance(e){let[t]=await n.db.delete(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e)).returning();return t}calculatePaymentRatios(e){let{totalContractAmount:t,advancePaymentRatio:a=30}=e,n=Math.round(t*a/100);return{advancePaymentRatio:a,remainingPaymentRatio:100-a,advancePaymentAmount:n,remainingPaymentAmount:t-n}}}},66081:(e,t,a)=>{a.d(t,{G:()=>s});var n=a(75159),r=a(95372),i=a(17235);class s{async create(e){let[t]=await n.db.insert(r.costDetails).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.costDetails).where((0,i.eq)(r.costDetails.id,e));return t}async findAll(){return await n.db.select().from(r.costDetails)}async findByCostId(e){let[t]=await n.db.select().from(r.costDetails).where((0,i.eq)(r.costDetails.costId,e));return t}async update(e,t){let[a]=await n.db.update(r.costDetails).set(t).where((0,i.eq)(r.costDetails.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.costDetails).where((0,i.eq)(r.costDetails.id,e)).returning();return t}async deleteByCostId(e){let t=await this.findByCostId(e);t&&await this.delete(t.id)}}},70014:(e,t,a)=>{a.d(t,{q:()=>s});var n=a(75159),r=a(95372),i=a(17235);class s{async create(e){let[t]=await n.db.insert(r.cargos).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.cargos).where((0,i.eq)(r.cargos.id,e));return t}async findAll(){return await n.db.select().from(r.cargos)}async findByShipmentId(e){return await n.db.select().from(r.cargos).where((0,i.eq)(r.cargos.shipmentId,e))}async update(e,t){let[a]=await n.db.update(r.cargos).set(t).where((0,i.eq)(r.cargos.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.cargos).where((0,i.eq)(r.cargos.id,e)).returning();return t}}},75159:(e,t,a)=>{a.d(t,{db:()=>o});var n=a(51550),r=a(87550),i=a.n(r),s=a(95372),m=a(33873);let c=a.n(m)().join(process.cwd(),"drizzle","database.sqlite"),d=new(i())(c),o=(0,n.f)(d,{schema:s})},95372:(e,t,a)=>{a.r(t),a.d(t,{cargos:()=>U,cargosRelations:()=>x,contracts:()=>v,contractsRelations:()=>D,costDetails:()=>P,costDetailsRelations:()=>q,costs:()=>b,costsRelations:()=>R,documents:()=>C,documentsRelations:()=>E,items:()=>T,itemsRelations:()=>I,payments:()=>p,paymentsRelations:()=>h,paymentsTt:()=>w,paymentsTtRelations:()=>g,paymentsUsance:()=>f,paymentsUsanceRelations:()=>_,shipments:()=>N,shipmentsRelations:()=>A,users:()=>Q});var n=a(46997),r=a(36688),i=a(88426),s=a(33981),m=a(85985),c=a(95821),d=a(58487);let o=e=>e.value?new Date(e.value).toLocaleDateString("ko-KR",{year:"numeric",month:"long",day:"numeric"}):"",l=e=>e.value?new Intl.NumberFormat("ko-KR",{style:"currency",currency:"KRW"}).format(e.value):"",y=e=>e.value?new Intl.NumberFormat("ko-KR",{style:"currency",currency:"KRW",minimumFractionDigits:0,maximumFractionDigits:0}).format(e.value)+"/kg":"",u=[{field:"contractNumber",headerName:"계약 번호",width:130},{field:"progressStatus",headerName:"진행 상태",width:100},{field:"contractDate",headerName:"계약일자",valueFormatter:o,width:150},{field:"importer",headerName:"수입처",width:120},{field:"contractParty",headerName:"계약처",width:120},{field:"estimatedTimeArrival",headerName:"ETA",valueFormatter:o,width:150},{field:"arrivalPort",headerName:"도착항",width:120},{field:"itemName",headerName:"품목",width:120},{field:"contractTon",headerName:"무게",valueFormatter:e=>`${e.value}톤`,width:100},{field:"unitPrice",headerName:"단가",valueFormatter:l,width:130},{field:"totalPrice",headerName:"단가 * 무게",valueFormatter:l,width:150},{field:"paymentMethod",headerName:"결제방식",width:100},{field:"warehouseEntryDate",headerName:"입고일",valueFormatter:o,width:150},{field:"importCostPerKg",headerName:"수입가/kg",valueFormatter:y,width:130},{field:"supplyCostPerKg",headerName:"수급가/kg",valueFormatter:y,width:130},{field:"totalCost",headerName:"총 비용",valueFormatter:l,width:150},{field:"totalCostPerKg",headerName:"총 비용/kg",valueFormatter:y,width:130},{field:"sellingPrice",headerName:"판매가",valueFormatter:l,width:130},{field:"margin",headerName:"마진",valueFormatter:e=>`${e.value}%`,width:100},{field:"totalProfit",headerName:"총 이익",valueFormatter:l,width:150}].map(e=>e.field),p=(0,n.D)("payments",{id:(0,r.Qq)("id").primaryKey(),paymentDueDate:(0,r.Qq)("payment_due_date"),paymentMethod:(0,r.Qq)("payment_method").notNull(),contractId:(0,r.Qq)("contract_id").notNull()},e=>[(0,i.z6)("payment_type_check",(0,c.ll)`${e.paymentMethod} IN ('T/T', 'CAD', 'L/C', 'Usance')`)]),h=(0,d.K1)(p,({one:e})=>({contract:e(v,{fields:[p.contractId],references:[v.id]}),paymentsTt:e(w,{fields:[p.id],references:[w.paymentId]}),paymentsUsance:e(f,{fields:[p.id],references:[f.paymentId]})})),w=(0,n.D)("payments_tt",{paymentId:(0,r.Qq)("payment_id").primaryKey().references(()=>p.id,{onDelete:"cascade"}),advancePaymentDate:(0,r.Qq)("advance_payment_date"),advancePaymentRatio:(0,s.x)("advance_payment_ratio"),advancePaymentAmount:(0,s.x)("advance_payment_amount"),remainingPaymentDate:(0,r.Qq)("remaining_payment_date"),remainingPaymentRatio:(0,s.x)("remaining_payment_ratio"),remainingPaymentAmount:(0,s.x)("remaining_payment_amount"),counterpartBank:(0,r.Qq)("counterpart_bank")}),g=(0,d.K1)(w,({one:e})=>({payment:e(p,{fields:[w.paymentId],references:[p.id]})})),f=(0,n.D)("payments_usance",{paymentId:(0,r.Qq)("payment_id").primaryKey().references(()=>p.id,{onDelete:"cascade"}),paymentTerm:(0,r.Qq)("payment_term"),contractExchangeRate:(0,r.Qq)("contact_exchange_rate")}),_=(0,d.K1)(f,({one:e})=>({payment:e(p,{fields:[f.paymentId],references:[p.id]})})),P=(0,n.D)("cost_details",{id:(0,r.Qq)("id").primaryKey(),unitPrice:(0,s.x)("unit_price"),exchangeRate:(0,s.x)("exchange_rate"),customsTaxRate:(0,s.x)("customs_tax_rate"),customTaxAmount:(0,s.x)("custom_tax_amount"),customsFee:(0,s.x)("customs_fee"),inspectionFee:(0,s.x)("inspection_fee"),doCharge:(0,s.x)("do_charge"),otherCosts:(0,s.x)("other_costs"),transferFee:(0,s.x)("transfer_fee"),costId:(0,r.Qq)("cost_id").notNull()}),q=(0,d.K1)(P,({one:e})=>({cost:e(b,{fields:[P.costId],references:[b.id]})})),v=(0,n.D)("contracts",{id:(0,r.Qq)("id").primaryKey(),contractNumber:(0,r.Qq)("contract_number"),contractDate:(0,r.Qq)("contract_date"),contractParty:(0,r.Qq)("contract_party"),importer:(0,r.Qq)("importer"),incoterms:(0,r.Qq)("incoterms")}),D=(0,d.K1)(v,({many:e})=>({payments:e(p),shipments:e(N),documents:e(C)})),T=(0,n.D)("items",{id:(0,r.Qq)("id").primaryKey(),itemName:(0,r.Qq)("item_name"),itemVariety:(0,r.Qq)("item_variety"),originCountry:(0,r.Qq)("origin_country"),hsCode:(0,r.Qq)("hs_code"),packingUnit:(0,r.Qq)("packing_unit")}),I=(0,d.K1)(T,({many:e})=>({cargos:e(U)})),b=(0,n.D)("costs",{id:(0,r.Qq)("id").primaryKey(),supplyPrice:(0,s.x)("supply_price"),shippingCost:(0,s.x)("shipping_cost"),laborCost:(0,s.x)("labor_cost"),transportStorageFee:(0,s.x)("transport_storage_fee"),loadingUnloadingFee:(0,s.x)("loading_unloading_fee"),cargoId:(0,r.Qq)("cargo_id").notNull()}),R=(0,d.K1)(b,({one:e,many:t})=>({cargo:e(U,{fields:[b.cargoId],references:[U.id]}),costDetails:t(P)})),Q=(0,n.D)("users",{id:(0,r.Qq)("id").primaryKey(),email:(0,r.Qq)("email"),password:(0,r.Qq)("password"),columnOrder:(0,r.Qq)("column_order").default(JSON.stringify(u))}),N=(0,n.D)("shipments",{id:(0,r.Qq)("id").primaryKey(),contractId:(0,r.Qq)("contract_id").notNull(),estimatedTimeArrival:(0,r.Qq)("estimated_time_arrival"),estimatedTimeDeparture:(0,r.Qq)("estimated_time_departure"),arrivalPort:(0,r.Qq)("arrival_port"),shippingCompany:(0,r.Qq)("shipping_company"),departurePort:(0,r.Qq)("departure_port"),blNumber:(0,r.Qq)("bl_number"),palletOrderDate:(0,r.Qq)("pallet_order_date"),palletType:(0,r.Qq)("pallet_type")}),A=(0,d.K1)(N,({one:e,many:t})=>({contract:e(v,{fields:[N.contractId],references:[v.id]}),cargos:t(U),documents:t(C)})),U=(0,n.D)("cargos",{id:(0,r.Qq)("id").primaryKey(),itemsId:(0,r.Qq)("items_id").notNull(),shipmentId:(0,r.Qq)("shipment_id").notNull(),containerCount:(0,m.nd)("container_count"),contractTon:(0,m.nd)("contract_ton"),customsClearanceDate:(0,r.Qq)("customs_clearance_date"),quarantineDate:(0,r.Qq)("quarantine_date"),warehouseEntryDate:(0,r.Qq)("warehouse_entry_date"),progressStatus:(0,r.Qq)("progress_status"),sellingPrice:(0,s.x)("selling_price"),margin:(0,s.x)("margin"),totalProfit:(0,s.x)("total_profit"),purchaseFeeRate:(0,s.x)("purchase_fee_rate")},e=>[(0,i.z6)("progress_status_check",(0,c.ll)`${e.progressStatus} IN ('REVIEW', 'CONTRACTING', 'BEFORE_LC', 'BEFORE_ARRIVAL', 'WAREHOUSE_MOVING', 'BEFORE_QUARANTINE', 'QUARANTINING', 'CUSTOMS_DECLARING', 'BEFORE_CUSTOMS', 'AFTER_CUSTOMS', 'SELLING')`)]),x=(0,d.K1)(U,({one:e,many:t})=>({item:e(T,{fields:[U.itemsId],references:[T.id]}),shipment:e(N,{fields:[U.shipmentId],references:[N.id]}),costs:t(b)})),C=(0,n.D)("documents",{id:(0,r.Qq)("id").primaryKey(),documentName:(0,r.Qq)("document_name").notNull(),documentType:(0,r.Qq)("document_type").notNull(),s3Url:(0,r.Qq)("s3_url").notNull(),uploadDate:(0,r.Qq)("upload_date").notNull(),relatedId:(0,r.Qq)("related_id").notNull(),documentCategory:(0,r.Qq)("document_category").notNull()}),E=(0,d.K1)(C,({one:e})=>({contract:e(v,{fields:[C.relatedId],references:[v.id],relationName:"contract_documents"}),shipment:e(N,{fields:[C.relatedId],references:[N.id],relationName:"shipment_documents"})}))}};
