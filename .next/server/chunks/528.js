"use strict";exports.id=528,exports.ids=[528],exports.modules={5485:(e,t,a)=>{a.d(t,{T:()=>c});var n=a(13913),r=a(8613),i=a(98149),s=a(22327);class c{constructor(){this.costDetailService=new s.G}async create(e){let[t]=await n.db.insert(r.costs).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.costs).where((0,i.eq)(r.costs.id,e));return t}async findAll(){return await n.db.select().from(r.costs)}async findByCargoId(e){let[t]=await n.db.select().from(r.costs).where((0,i.eq)(r.costs.cargoId,e));return t}async update(e,t){let[a]=await n.db.update(r.costs).set(t).where((0,i.eq)(r.costs.id,e)).returning();return a}async delete(e){await this.costDetailService.deleteByCostId(e);let[t]=await n.db.delete(r.costs).where((0,i.eq)(r.costs.id,e)).returning();return t}}},10854:(e,t,a)=>{a.d(t,{A:()=>n});var n=function(e){return e.STANDARD="STANDARD",e.DNB="DNB",e.NAMHAE="NAMHAE",e}({})},21316:(e,t,a)=>{a.d(t,{Y:()=>o});var n=a(13913),r=a(8613),i=a(26763),s=a(10854),c=a(98149),m=a(70564);class o{async createImporter(e,t){try{let[a]=await n.db.insert(r.importers).values({id:(0,i.Ak)(),importerName:e,calculationType:t}).returning();return{...a}}catch(e){throw console.error("수입업체 생성 중 오류:",e),Error(`수입업체 생성 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async getAllImporters(){try{return(await n.db.query.importers.findMany()).map(e=>({...e}))}catch(e){throw console.error("수입업체 조회 중 오류:",e),Error(`수입업체 조회 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async getImporterById(e){try{let t=await n.db.query.importers.findFirst({where:(0,c.eq)(r.importers.id,e)});if(!t)throw Error("수입업체를 찾을 수 없습니다.");return{...t}}catch(e){throw console.error("수입업체 조회 중 오류:",e),Error(`수입업체 조회 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async updateImporter(e,t){let a=new m.y;try{if(!t.importerName)throw Error("이름이 필요합니다.");let e=await this.findByName(t.importerName);if(e)return(await a.findByImporterId(e.id)).length<2&&this.deleteImporter(e.id),e;let n=await this.createImporter(t.importerName,function(e){switch(e){case"DNB":return s.A.DNB;case"남해":return s.A.NAMHAE;default:return s.A.STANDARD}}(t.importerName));if(!n)throw Error("수입업체를 찾을 수 없습니다.");return{...n}}catch(e){throw console.error("수입업체 업데이트 중 오류:",e),Error(`수입업체 업데이트 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async deleteImporter(e){try{let[t]=await n.db.delete(r.importers).where((0,c.eq)(r.importers.id,e)).returning();if(!t)throw Error("수입업체를 찾을 수 없습니다.");return{...t}}catch(e){throw console.error("수입업체 삭제 중 오류:",e),Error(`수입업체 삭제 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async searchImportersByName(e){try{return(await n.db.query.importers.findMany({where:(0,c.mj)(r.importers.importerName,`%${e}%`)})).map(e=>({...e}))}catch(e){throw console.error("수입업체 검색 중 오류:",e),Error(`수입업체 검색 실패: ${e instanceof Error?e.message:"알 수 없는 오류"}`)}}async findByName(e){let[t]=await n.db.select().from(r.importers).where((0,c.eq)(r.importers.importerName,e));return t}}},22168:(e,t,a)=>{a.d(t,{q:()=>s});var n=a(13913),r=a(8613),i=a(98149);class s{async create(e){let[t]=await n.db.insert(r.cargos).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.cargos).where((0,i.eq)(r.cargos.id,e));return t}async findAll(){return await n.db.select().from(r.cargos)}async findByShipmentId(e){return await n.db.select().from(r.cargos).where((0,i.eq)(r.cargos.shipmentId,e))}async update(e,t){let[a]=await n.db.update(r.cargos).set(t).where((0,i.eq)(r.cargos.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.cargos).where((0,i.eq)(r.cargos.id,e)).returning();return t}}},22327:(e,t,a)=>{a.d(t,{G:()=>s});var n=a(13913),r=a(8613),i=a(98149);class s{async create(e){let[t]=await n.db.insert(r.costDetails).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.costDetails).where((0,i.eq)(r.costDetails.id,e));return t}async findAll(){return await n.db.select().from(r.costDetails)}async findByCostId(e){let[t]=await n.db.select().from(r.costDetails).where((0,i.eq)(r.costDetails.costId,e));return t}async update(e,t){let[a]=await n.db.update(r.costDetails).set(t).where((0,i.eq)(r.costDetails.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.costDetails).where((0,i.eq)(r.costDetails.id,e)).returning();return t}async deleteByCostId(e){let t=await this.findByCostId(e);t&&await this.delete(t.id)}}},37988:(e,t,a)=>{a.d(t,{o:()=>c});var n=a(13913),r=a(8613),i=a(98149),s=a(22168);class c{constructor(){this.cargoService=new s.q}async create(e){let[t]=await n.db.insert(r.shipments).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.shipments).where((0,i.eq)(r.shipments.id,e));return t}async findAll(){return await n.db.select().from(r.shipments)}async findByContractId(e){return await n.db.select().from(r.shipments).where((0,i.eq)(r.shipments.contractId,e))}async update(e,t){let[a]=await n.db.update(r.shipments).set(t).where((0,i.eq)(r.shipments.id,e)).returning();return a}async delete(e){let t=await this.cargoService.findByShipmentId(e);await Promise.all(t.map(e=>this.cargoService.delete(e.id)));let[a]=await n.db.delete(r.shipments).where((0,i.eq)(r.shipments.id,e)).returning();return a}}},54022:(e,t,a)=>{a.d(t,{W:()=>s});var n=a(13913),r=a(8613),i=a(98149);class s{async createWithDetails(e){try{let[t]=await n.db.insert(r.payments).values(e.payment).returning();switch(e.payment.paymentMethod){case"T/T":if(!e.paymentTt)throw Error("T/T 결제 방식에는 paymentTt 데이터가 필요합니다.");await this.createTt({...e.paymentTt,paymentId:t.id});break;case"Usance":if(!e.paymentUsance)throw Error("Usance 결제 방식에는 paymentUsance 데이터가 필요합니다.");await this.createUsance({...e.paymentUsance,paymentId:t.id});break;case"CAD":case"L/C":break;default:throw Error(`지원하지 않는 결제 방식입니다: ${e.payment.paymentMethod}`)}return t}catch(e){throw console.error("결제 정보 생성 중 오류 발생:",e),e}}async create(e){let[t]=await n.db.insert(r.payments).values(e).returning();return t}async createTt(e){let[t]=await n.db.insert(r.paymentsTt).values(e).returning();return t}async createUsance(e){let[t]=await n.db.insert(r.paymentsUsance).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.id,e));return t}async findTtByPaymentId(e){let[t]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e));return t}async findUsanceByPaymentId(e){let[t]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e));return t}async findAll(){let e=await n.db.select().from(r.payments);return await Promise.all(e.map(async e=>{let[t]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e.id)),[a]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e.id)),s=t?(t.advancePaymentAmount||0)+(t.remainingPaymentAmount||0):0;return{...e,paymentDueDate:e.paymentDueDate,advancePaymentDate:t?.advancePaymentDate??null,advancePaymentRatio:t?.advancePaymentRatio??null,advancePaymentAmount:t?.advancePaymentAmount??null,remainingPaymentDate:t?.remainingPaymentDate??null,remainingPaymentRatio:t?.remainingPaymentRatio??null,remainingPaymentAmount:t?.remainingPaymentAmount??null,counterpartBank:t?.counterpartBank??null,paymentTerm:a?.paymentTerm??null,contractExchangeRate:a?.contractExchangeRate??null,totalContractAmount:s}}))}async findByContractId(e){let[t]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.contractId,e));if(!t)return null;let[a]=await n.db.select().from(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,t.id)),[s]=await n.db.select().from(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,t.id)),c=a?(a.advancePaymentAmount||0)+(a.remainingPaymentAmount||0):0;return{...t,paymentDueDate:t.paymentDueDate,advancePaymentDate:a?.advancePaymentDate??null,advancePaymentRatio:a?.advancePaymentRatio??null,advancePaymentAmount:a?.advancePaymentAmount??null,remainingPaymentDate:a?.remainingPaymentDate??null,remainingPaymentRatio:a?.remainingPaymentRatio??null,remainingPaymentAmount:a?.remainingPaymentAmount??null,counterpartBank:a?.counterpartBank??null,paymentTerm:s?.paymentTerm??null,contractExchangeRate:s?.contractExchangeRate??null,totalContractAmount:c}}async update(e,t){try{let[a]=await n.db.select().from(r.payments).where((0,i.eq)(r.payments.id,e));if(!a)throw Error("결제 정보를 찾을 수 없습니다.");if(a.paymentMethod!==t.paymentMethod){switch(a.paymentMethod){case"T/T":await this.deleteTt(e);break;case"Usance":await this.deleteUsance(e)}switch(t.paymentMethod){case"T/T":if(!t.advancePaymentDate||!t.remainingPaymentDate)throw Error("T/T 결제 방식에는 선급금과 잔금 날짜가 필요합니다.");await this.createTt({paymentId:e,advancePaymentDate:t.advancePaymentDate,advancePaymentRatio:t.advancePaymentRatio||30,advancePaymentAmount:(t.totalContractAmount||0)*(t.advancePaymentRatio||30)/100,remainingPaymentDate:t.remainingPaymentDate,remainingPaymentRatio:t.remainingPaymentRatio||70,remainingPaymentAmount:(t.totalContractAmount||0)*(t.remainingPaymentRatio||70)/100,counterpartBank:t.counterpartBank||""});break;case"Usance":if(!t.paymentTerm)throw Error("Usance 결제 방식에는 결제 기간이 필요합니다.");await this.createUsance({paymentId:e,paymentTerm:t.paymentTerm})}}else switch(t.paymentMethod){case"T/T":if(!t.advancePaymentDate||!t.remainingPaymentDate)throw Error("T/T 결제 방식에는 선급금과 잔금 날짜가 필요합니다.");await this.updateTt(e,{advancePaymentDate:t.advancePaymentDate,advancePaymentRatio:t.advancePaymentRatio,remainingPaymentDate:t.remainingPaymentDate,remainingPaymentRatio:t.remainingPaymentRatio,counterpartBank:t.counterpartBank||"",advancePaymentAmount:(t.totalContractAmount||0)*(t.advancePaymentRatio||30)/100,remainingPaymentAmount:(t.totalContractAmount||0)*(t.remainingPaymentRatio||70)/100});break;case"Usance":if(!t.paymentTerm)throw Error("Usance 결제 방식에는 결제 기간이 필요합니다.");await this.updateUsance(e,{paymentTerm:t.paymentTerm})}let[s]=await n.db.update(r.payments).set({paymentMethod:t.paymentMethod,paymentDueDate:t.paymentDueDate}).where((0,i.eq)(r.payments.id,e)).returning();return s}catch(e){throw console.error("결제 정보 업데이트 중 오류 발생:",e),e}}async updateTt(e,t){if(void 0!==t.advancePaymentRatio&&null!==t.advancePaymentRatio){let e=(t.advancePaymentAmount||0)+(t.remainingPaymentAmount||0),a=this.calculatePaymentRatios({totalContractAmount:e,advancePaymentRatio:t.advancePaymentRatio});t={...t,advancePaymentAmount:a.advancePaymentAmount,remainingPaymentAmount:a.remainingPaymentAmount}}let[a]=await n.db.update(r.paymentsTt).set(t).where((0,i.eq)(r.paymentsTt.paymentId,e)).returning();return a}async updateUsance(e,t){let[a]=await n.db.update(r.paymentsUsance).set(t).where((0,i.eq)(r.paymentsUsance.paymentId,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.payments).where((0,i.eq)(r.payments.id,e)).returning();return t}async deleteTt(e){let[t]=await n.db.delete(r.paymentsTt).where((0,i.eq)(r.paymentsTt.paymentId,e)).returning();return t}async deleteUsance(e){let[t]=await n.db.delete(r.paymentsUsance).where((0,i.eq)(r.paymentsUsance.paymentId,e)).returning();return t}calculatePaymentRatios(e){let{totalContractAmount:t,advancePaymentRatio:a=30}=e,n=Math.round(t*a/100);return{advancePaymentRatio:a,remainingPaymentRatio:100-a,advancePaymentAmount:n,remainingPaymentAmount:t-n}}}},70564:(e,t,a)=>{a.d(t,{y:()=>s});var n=a(13913),r=a(8613),i=a(98149);class s{async create(e){let[t]=await n.db.insert(r.contracts).values(e).returning();return t}async findById(e){let[t]=await n.db.select().from(r.contracts).where((0,i.eq)(r.contracts.id,e));return t}async findAll(){return await n.db.select().from(r.contracts)}async findByImporterId(e){return await n.db.select().from(r.contracts).where((0,i.eq)(r.contracts.importerId,e))}async update(e,t){let[a]=await n.db.update(r.contracts).set(t).where((0,i.eq)(r.contracts.id,e)).returning();return a}async delete(e){let[t]=await n.db.delete(r.contracts).where((0,i.eq)(r.contracts.id,e)).returning();return t}}},73103:(e,t,a)=>{a.d(t,{LE:()=>n});let n={REVIEW:"검토중",CONTRACTING:"계약중",BEFORE_LC:"L/C오픈전",BEFORE_ARRIVAL:"입항전",WAREHOUSE_MOVING:"창고 이동중",BEFORE_QUARANTINE:"검역전",QUARANTINING:"검역중",CUSTOMS_DECLARING:"세관신고중",DONE_ARRIVAL:"입항완료",AFTER_CUSTOMS:"통관완료",SELLING:"판매중"}}};
